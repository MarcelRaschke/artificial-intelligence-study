# -*- coding: utf-8 -*-
"""02_keras-input-model.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1zBVW-CkzAXdMDYldXUpoaOKdqxgytN-N
"""

#https://keras.io/getting-started/functional-api-guide/
#First example: a densely-connected network

from keras.layers import Input, Dense
from keras.models import Model

# This returns a tensor
inputs = Input(shape=(784,))
print(inputs.shape) #(?, 784)

# a layer instance is callable on a tensor, and returns a tensor
output_1 = Dense(64, activation='relu')(inputs)
print(output_1.shape)

output_2 = Dense(64, activation='relu')(output_1)
print(output_2.shape)

predictions = Dense(10, activation='softmax')(output_2)
print(predictions.shape) #(?, 784)

# This creates a model that includes
# the Input layer and three Dense layers
model = Model(inputs=inputs, outputs=predictions)
model.summary()

model.compile(optimizer='rmsprop',
              loss='categorical_crossentropy',
              metrics=['accuracy'])

import numpy as np

data = np.array([range(784)])
print(data)
print(data.shape) #(1, 784)
labels = np.array([range(10)])
print(labels.shape) #(1, 10)
print(labels)

model.fit(data, labels)  # starts training

